CSS Alignment: Controlling Element Placement
CSS provides a variety of properties to align elements horizontally and vertically within their containers. Additionally, the display property can significantly influence how elements are arranged and interact with each other.

Horizontal Alignment
text-align: Aligns the text within a block-level element (e.g., p, h1). Values include left, center, right, and justify.
margin-left and margin-right: Adjust the left and right margins of an element to control its horizontal position.
Vertical Alignment
vertical-align: Aligns inline elements within a block-level element. Values include top, middle, bottom, and baseline.
line-height: Sets the line height for a block-level element, affecting the vertical spacing between lines of text.
margin-top and margin-bottom: Adjust the top and bottom margins of an element to control its vertical position.
Display Properties
block: Elements are displayed as blocks, taking up the full width of their container.
inline: Elements are displayed inline, without starting a new line.
inline-block: Elements are displayed inline but can have their width, height, and margins set.
flex: Enables flexible box layout, allowing elements to be arranged and sized in a more dynamic way.
Example HTML and CSS
HTML
<!DOCTYPE html>
<html>
<head>
  <title>Alignment Example</title>
  <style>
    .container {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 300px;
    }

    .box {
      width: 100px;
      height: 100px;
      background-color: #f0f0f0;
      border: 1px solid #ccc;
    }

    .text-center {
      text-align: center;
    }

    .vertical-middle {
      vertical-align: middle;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="box text-center">Box 1</div>
    <div class="box vertical-middle">Box 2</div>
  </div>
</body>
</html>
Use code with caution.

Explanation
The .container class uses display: flex to create a flexible container.
justify-content: center aligns the child elements horizontally in the center of the container.
align-items: center aligns the child elements vertically in the center of the container.
The .text-center class applies text-align: center to the first box.
The .vertical-middle class applies vertical-align: middle to the second box, aligning it vertically with the center of its parent container.
This example demonstrates how to use different alignment techniques, including text alignment, vertical alignment, and the display: flex property to create a well-structured and visually appealing layout.
